{
	"info": {
		"_postman_id": "240cadae-fa99-4d95-96bc-0434e904aa43",
		"name": "Xe.com",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "14706184"
	},
	"item": [
		{
			"name": "GET method",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Validate 'title' and 'body' properties have content\", () => {\r",
							"    const jsonData = pm.response.json();\r",
							"  jsonData.forEach((item) => {\r",
							"    pm.expect(item.title).to.not.be.empty;\r",
							"    pm.expect(item.body).to.not.be.empty;\r",
							"  });\r",
							"});\r",
							"\r",
							"pm.test(\"Validate that none of the properties contain the word 'zombie'\", () => {\r",
							"    const jsonData = pm.response.json();\r",
							"  jsonData.forEach((item) => {\r",
							"    Object.keys(item).forEach((prop) => {\r",
							"      const propertyValue = item[prop];\r",
							"      const propertyValueString = String(propertyValue).toLowerCase();\r",
							"      pm.expect(propertyValueString).to.not.include('zombie', `Property '${prop}' in item with ID ${item.id} contains the word 'zombie'`);\r",
							"    });\r",
							"  });\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/posts/",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "POST method",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"    \r",
							"pm.test(\"Verify Topping property contains bacon, cheese, mushroom and not contain chicken\", function () {\r",
							"    const responseBody = pm.response.json();\r",
							"    const expectedToppings = [\"bacon\", \"cheese\", \"mushroom\"];\r",
							"    const actualToppings = responseBody.json.topping;\r",
							"    pm.expect(actualToppings).to.eql(expectedToppings);\r",
							"    pm.expect(actualToppings).not.to.include(\"chicken\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \r\n\"student\": \"Tim Allen\", \r\n\"email_address\": \"tim@homeimprovement.com\", \r\n\"phone\": \"(408) 8674530\", \r\n\"current_grade\": \"B+\", \r\n\"topping\": [ \r\n\"bacon\", \r\n\"cheese\", \r\n\"mushroom\" \r\n] \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://httpbin.org/post",
					"protocol": "https",
					"host": [
						"httpbin",
						"org"
					],
					"path": [
						"post"
					]
				}
			},
			"response": []
		}
	]
}